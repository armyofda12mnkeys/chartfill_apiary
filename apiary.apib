FORMAT: 1A
HOST: https://acurianauthformapidev.azurewebsites.net

# Chartfill API

Note: here are the envs for Chartfill:

DEV: https://acurianauthformapidev.azurewebsites.net

QA: nothing yet, TODO: GET FROM CHARTFILL

STAGING: nothing yet, TODO: GET FROM CHARTFILL

PROD: nothing yet, TODO: GET FROM CHARTFILL


Polls is a simple API allowing consumers to view polls and vote in them.

## Create Chartfill Link for OLS embedded flow [/Home/IncomingFeed]
### Create Chartfill Link for OLS embedded flow [POST]

+ Request 200 (application/json)

    + Attributes
        + Key (string) - an api secret/key will be passed here like a1b2c2d3-ijkl-1234-abcd-abcdefghijkl, Note: there will be a different key per instance
        + IncomingFeed (object)
            + PatientID (number)
            + SiteNumber (number)
            + ProjectCode (string) -
            + Indication (string) - example: "Cancer Or Some Other Indication" CF-Nate- May not need this field due to new auth forms on CF side
            + PatientFirstName (string)
            + PatientLastName (string)
            + PatientEmail (string) - this is usually required, but becomes optional field that won't get used if CaregiverFlow is true since CaregiverEmail becomes the person who gets emailed. If this is provided, maybe this person can be CCed on the signature (I would confirm this though as we aren't doing this currently I think. TODO: ACURIAN TO CONFIRM)
            + PatientPhone (string) - might be an int but not sure for international phone numbers if those are escaped properly so making this a string - Nate Agreed due to () if they are included
            + PatientDOB (string) - This string is in a date format like: "1960-01-01"
            + CaregiverFlow (boolean) - TODO: Chartfill to implement ... can send this as true if its Caregiver flow... or false (or dont send at all if its normal Patient flow)
            + CaregiverFirstName (string, optional) - TODO: Chartfill to implement ... if CaregiverFlow boolean is true, this is required
            + CaregiverLastName (string, optional) - TODO: Chartfill to implement ... if CaregiverFlow boolean is true, this is required
            + CaregiverEmail (string, optional)  - TODO: Chartfill to implement ... if CaregiverFlow boolean is true, this is required
            + CaregiverPhone (string, optional)  - TODO: Chartfill to implement ... if CaregiverFlow boolean is true, this is optional (not sure if this is a required field in our Caregiver flow)
            + Debug (boolean) - TODO: Chartfill to implement ... states whether to treat this in 'test' mode' aka don't send to the real production distribution list but the test dist list
            + Env (string) - TODO: PROBABLY WILL REMOVE THIS ... Note: if Chartfill giving us 4 different urls \(which prob have 4 of their own databases\) then they will know the ENV. and then can remove this field.
    + Body
    
            {
                "Key": "abc1234-api-key-hidden-for-security-reasons-abc1234",
                "IncomingFeed":{
                    PatientID: "101010101",
                    SiteNumber: "10111",
                    ProjectCode: "3485",
                    Indication: "Cancer Or Some Other Indication",
                    PatientFirstName: "Arian",
                    PatientLastName: "Hojat",
                    PatientDOB: "1960-01-01",
                    PatientPhone: "2151231234",
                    PatientEmail: "arian.hojat@acurian.com",
                    
                    CaregiverFlow: true,
                    CaregiverFirstName: "John",
                    CaregiverLastName: "Smith",
                    CaregiverEmail: "caregiver@caregiver.com",
                    CaregiverPhone: "2159876543",
                    Debug: false
                }
            }


+ Response 200 (application/json)
    + Attributes
        + url (string) - url to embed in online screener
        + Status (string) - usually "Success"
    
    + Body
    
            {
                Url : "url",
                Status: "Success"
            } 


+ Response 400 (application/json)
    + Attributes
        + Status (string) - 
        + ErrorType (string) - 
        + ErrorMessage (string) -
    
    + Body
    
            {
                ErrorType = "Authentication",
                ErrorMessage = "Invalid Key",
                Status = "Rejected"
            }

+ Response 401 (application/json)
    + Attributes
        + Status (string) - 
        + ErrorType (string) - 
        + ErrorMessage (string) - 
    
    + Body
    
            {
                ErrorType = "Duplicate",
                ErrorMessage = "Already Signed",
                Status = "Rejected"
            }


+ Response 402 (application/json)
    + Attributes
        + Status (string) - 
        + ErrorType (string) - 
        + ErrorMessage (string) - what if multiple fields have a validation error?
    
    + Body
    
            {
                ErrorType = "Invalid Input",
                ErrorMessage = "(missing field name)",
                Status = "Rejected"
            }



##Create Chartfill link for CallCenter flow aka email [/Home/???]
### Create Chartfill Link for CallCenter flow (email) [POST]

Same almost as above but functinality-wise it emails te patient/caregiver on behalf of us.
Maybe add an error/exception if the email couldn't be sent if possible.

CF - Nate - For me it would likely be the same process; 
if you have the patient fill in information/have the patient information, I would just call the same API
A discussion or a visual representation of the current flow would  be needed for this one

+ Request 200 (application/json)

    + Attributes
        + TODO - TODO FOR CHARTFILL
        + TODO - TODO FOR CHARTFILL
        + TODO - TODO FOR CHARTFILL
        
+ Response 200 (application/json)
    + Attributes
        + url (string) - url to embed in online screener
        + Status (string) - usually "Success"
    
    + Body
    
            {
                Url : "url",
                Status: "Success"
            }
            
            
##Acurian callback API [/???]